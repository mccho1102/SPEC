/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.42
 * Generated at: 2019-07-18 08:33:21 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import member.model.vo.Member;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/views/common/menubar.jsp", Long.valueOf(1563438792990L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("member.model.vo.Member");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("\t<head>\r\n");
      out.write("\t\t<meta charset=\"UTF-8\">\r\n");
      out.write("\t\t<title>jspProject</title>\r\n");
      out.write("\t</head>\r\n");
      out.write("\t<body>\r\n");
      out.write("\t\t");
      out.write("\r\n");
      out.write("\r\n");

	// session 객체에 담겨진 loginUser 정보를 저장해두기
	Member loginUser = (Member)session.getAttribute("loginUser");

	/************* 3. 아이디 저장 처리(Cookie) ****************/
	// 세션은 서버가 생성 및 관리
	// 쿠키는 서버가 생성하고 브라우저가 관리

	// 쿠키는 최대 4KB

	/*
		순서
		1) 로그인 시 아이디 저장 saveId 체크박스의 체크 여부에 따라 서버에서 쿠키 생성
		   (쿠키 key=saveid, value=userid)
		2) response 객체에 setCookie 메소드를 이용하여 쿠키 객체 전달( 브라우저가 해당 쿠키 관리 ) 
		3) 다음 요청 때 이 쿠키를 함께 서버로 전송함
		4) 서버가 로그인 페이지를 생성할 때 전송된 쿠키 배열객체에서
		   saveid 라는 쿠키가 있다면 그 value를 id 입력상자에 입력하고 아이디 저장 체크받스를 check 함
	*/

	// 아이디 저장 체크박스 값을 수정하기 위한 변수
	boolean saveId = false; 

	// 쿠키에 저장된 아이디를 저장할 변수
	String userIdSaved = "";

	Cookie[] cookies = request.getCookies();

	// 아이디 저장 체크박스
	// 아이디 저장을 체크하지 않으면 서버 첫 시작 시 request.getCookies() 값이 null 이므로
	// 조건없이 바로 접근하면 NullPointerException이 발생한다!
	//  --> if 문으로 null여부 체크

	if(cookies != null) {
		for(Cookie ck : cookies) {
			if(ck.getName().equals("saveId")) {
				userIdSaved = ck.getValue();
				saveId = true;
			}
		}
	}

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("\t<head>\r\n");
      out.write("\t\t<meta charset=\"UTF-8\">\r\n");
      out.write("\t\t<title>Insert title here</title>\r\n");
      out.write("\t\t<!-- ajax.googleapis.com -->\r\n");
      out.write("\t\t<script type=\"text/javascript\" src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js\"></script>\r\n");
      out.write("\t\t<link href=\"https://fonts.googleapis.com/css?family=Noto+Sans+KR&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("\t\t<style>\r\n");
      out.write("\t\t\tbody {\r\n");
      out.write("\t\t\t\tbackground:url('");
      out.print(request.getContextPath() );
      out.write("/images/tvxq.jpg') no-repeat;\r\n");
      out.write("\t\t\t\tbackground-size:cover;\r\n");
      out.write("\t\t\t\tfont-family: 'Noto Sans KR', sans-serif;\r\n");
      out.write("\t\t\t\tcolor: white;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\th1 {\r\n");
      out.write("\t\t\t\ttext-align: center;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t#loginBtn input, #memberJoinBtn, #logoutBtn, #myPage{\r\n");
      out.write("\t\t\t\tdisplay:inline-block;\r\n");
      out.write("\t\t\t\tverticla-align:middle;\r\n");
      out.write("\t\t\t\ttext-align:center;\r\n");
      out.write("\t\t\t\tbackground:darkred;\r\n");
      out.write("\t\t\t\tcolor:white;\r\n");
      out.write("\t\t\t\theight:25px;\r\n");
      out.write("\t\t\t\twidth:100px;\r\n");
      out.write("\t\t\t\tborder-radius:5px;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t#memberJoinBtn {\r\n");
      out.write("\t\t\t\tbackground:yellowgreen;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t#loginBtn:hover, #changeInfo:hover, #logoutBtn:hover, #memberJoinBtn:hover, #myPage:hover{\r\n");
      out.write("\t\t\t\tcursor:pointer;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t.loginArea > form, #userInfo {\r\n");
      out.write("\t\t\t\tfloat:right;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t#userInfo {\r\n");
      out.write("\t\t\t\ttext-align: center;\r\n");
      out.write("\t\t\t\tbackground-color: rgba(255,255,255,0.4);\r\n");
      out.write("\t\t\t\tborder-radius: 5px;\r\n");
      out.write("\t\t\t\tpadding: 10px;\r\n");
      out.write("\t\t\t\tmargin: 0 10px 0 0;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t#welcomeUser {\r\n");
      out.write("\t\t\t\tdisplay: inline-block;\r\n");
      out.write("\t\t\t\tmargin-bottom: 10px;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t#welcomeUser span {\r\n");
      out.write("\t\t\t\tfont-weight: 900;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t#logout, #myPage {\r\n");
      out.write("\t\t\t\tbackground:orangered;\r\n");
      out.write("\t\t\t\tcolor:white;\r\n");
      out.write("\t\t\t\ttext-decoration:none;\r\n");
      out.write("\t\t\t\tborder-radius:5px;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t#myPage {\r\n");
      out.write("\t\t\t\tbackground:yellowgreen;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t.wrap {\r\n");
      out.write("\t\t\t\tbackground:black;\r\n");
      out.write("\t\t\t\twidth:100%;\r\n");
      out.write("\t\t\t\theight:50px;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t.menu {\r\n");
      out.write("\t\t\t\tbackground:black;\r\n");
      out.write("\t\t\t\tcolor:white;\r\n");
      out.write("\t\t\t\ttext-align:center;\r\n");
      out.write("\t\t\t\tvertical-align:middle;\r\n");
      out.write("\t\t\t\twidth:150px;\r\n");
      out.write("\t\t\t\theight:50px;\r\n");
      out.write("\t\t\t\tdisplay:table-cell;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t.nav {\r\n");
      out.write("\t\t\t\twidth:600px;\r\n");
      out.write("\t\t\t\tmargin-left:auto;\r\n");
      out.write("\t\t\t\tmargin-right:auto;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t.menu:hover {\r\n");
      out.write("\t\t\t\tbackground:darkgray;\r\n");
      out.write("\t\t\t\tcolor:orangered;\r\n");
      out.write("\t\t\t\tfont-weight:bold;\r\n");
      out.write("\t\t\t\tcursor:pointer;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t</style>\r\n");
      out.write("\t</head>\r\n");
      out.write("\t<body>\r\n");
      out.write("\t\t<h1>Welcome JSP Project!!!</h1>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<!----------------------- 회원 관련 서비스 ------------------------------->\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<div class=\"loginArea\">\r\n");
      out.write("\t\t<!-- 2. 로그인 여부에 따라 화면 변경 -->\r\n");
      out.write("\t\t<!-- 2.1 로그인 되어있는 경우 / 안되어 있는 경우에 따라 화면이 달라야 하기 때문에\r\n");
      out.write("\t\t\t\t if 문을 이용하여 session의 값을 검사->session 값 유무에 따라 화면 변경 \r\n");
      out.write("\t\t\t\t  ->> 페이지 제일 상단에 session값을 저장해놓을 변수 선언\r\n");
      out.write("\t\t-->\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\t<!-- 2.2 로그인이 되어 있지 않은 경우 -->\r\n");
      out.write("\t\t\t");
 if(loginUser == null ) { 
      out.write("\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<!-- 1.1 로그인 관련 폼 만들기 -->\r\n");
      out.write("\t\t\t<form action=\"");
      out.print(request.getContextPath() );
      out.write("/login.me\" id=\"loginForm\" method=\"POST\" onsubmit=\"return validate();\">\r\n");
      out.write("\t\t\t\t<table>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td>ID : </td>\r\n");
      out.write("\t\t\t\t\t\t<td><input type=\"text\" name=\"userId\" id=\"userId\" value=\"");
      out.print(saveId? userIdSaved : "");
      out.write("\"></td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td>PWD : </td>\r\n");
      out.write("\t\t\t\t\t\t<td><input type=\"password\" name=\"userPwd\" id=\"userPwd\"></td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td colspan=\"2\"><label><input type=\"checkbox\" name=\"saveId\" ");
      out.print( saveId ? "checked" : "" );
      out.write(" >&nbsp;아이디 저장</label></td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t<div class=\"btns\" align=\"center\">\r\n");
      out.write("\t\t\t\t\t<div id=\"memberJoinBtn\" onclick=\"memberJoin();\">회원가입</div>\r\n");
      out.write("\t\t\t\t\t<div id=\"loginBtn\"><input type=\"submit\" value=\"로그인\"></div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\t\t\t");
 } else { 
      out.write("\r\n");
      out.write("\t\t\t\t<div id=\"userInfo\">\r\n");
      out.write("\t\t\t\t\t<label id=\"welcomeUser\"><span>");
      out.print(loginUser.getName() );
      out.write("</span> 님 환영합니다!</label>\r\n");
      out.write("\t\t\t\t\t<div class=\"btns\" align=\"right\">\r\n");
      out.write("\t\t\t\t\t\t<div id=\"myPage\" onclick=\"\">정보수정</div>\r\n");
      out.write("\t\t\t\t\t\t<div id=\"logoutBtn\" onclick=\"logout();\">로그아웃</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t");
 } 
      out.write("\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<script>\r\n");
      out.write("\t\t\t/* 1.2 로그인 유효성 검사 */ \r\n");
      out.write("\t\t\tfunction validate() {\r\n");
      out.write("\t\t\t\tif($(\"#userId\").val().trim().length == 0) {\r\n");
      out.write("\t\t\t\t\talert(\"아이디를 입력하세요\");\r\n");
      out.write("\t\t\t\t\t$(\"#userId\").focus();\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tif ( $(\"#userPwd\").val().trim().length == 0 ) {\r\n");
      out.write("\t\t\t\t\talert(\"비밀번호를 입력하세요\");\r\n");
      out.write("\t\t\t\t\t$(\"#userPwd\").focus();\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\treturn true;\r\n");
      out.write("\t\t\t\t// LoginServlet 생성하기\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t// 2.3 로그아웃\r\n");
      out.write("\t\t\tfunction logout() {\r\n");
      out.write("\t\t\t\t// 로그아웃 버튼 클릭 시\r\n");
      out.write("\t\t\t\t// LogoutServlet으로 이동하여\r\n");
      out.write("\t\t\t\t// session에 저장된 값을 삭제\r\n");
      out.write("\t\t\t\tlocation.href = \"");
      out.print( request.getContextPath());
      out.write("/logout.me\";\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t</script>\r\n");
      out.write("\t</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("\t</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
